PREREQUISITES

* the <img> tags must be properly formatted, with one 'src' paramater on the same line as the start of the tag and a file extension in the 'src' parameter

GENERAL FLOW

    parse arguments
    if in-place editing disabled and quiet option enabled
        exit
    open input file
    open output file
    if you get next line
        search and replace in the line
        print line to output file
    if in-place editing enabled
        move output file to input file
    if quiet option disabled
        print to output file to output stream

SEARCH AND REPLACE ALGORITHM

1. reaches "<img"
2. reaches "src\s*=\s*"
3a. reaches the first quote
3b. reaches the second quote (possibly on another line
3c. fetches up to 320 chars in quoted string of 'src' (SRC_STR)
4. makes sure SRC_STR is well-formated
5. makes sure it's not Base64 already
6. records path to SRC_PATH
7. call b64 encoding func with SRC_PATH argument, which gives B64_STR
8. replaces SRC_PATH with B64_STR

READING RESOURCES

* `cd` to the dir containing the HTML file before analyzing it or: `pwd`+ dirname of HTML file + pathname to resource
* find a way to make absolute pathes work ('--rootpath' option to specify where the root is located)

MATCHING REGEX

Correct 'src' for b64 img:
	src="\s*data:\s*image\s*/\s*(gif|jpeg|png|(x-)?bmp|x-icon)\s*[;\s*charset\s*=\s*utf-8\s*];\s*base64\s*,\s*{BASE64STRING}\s*"

Matching regex:
    ^.*<img\s*src\s*=\s*['"]\([^"']\+\)['"].*$
    .*src[[:blank:]]*=[[:blank:]]*["'][[:blank:]]*([^"']+)[[:blank:]]*["']
                                                                      ^ weakness here: should really be same as the first match of ['"]

ERRORS
Error codes: which ones to use: https://www.gnu.org/software/libc/manual/html_node/Error-Codes.html

* ENOENT) FILE does not exist
* EINVAL) FILE is not an HTML file

Simply emit warnings when:
* <img> src file was not found
* <img> src was already b64
* no <img> tags were changed at all (when exiting)
