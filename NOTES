Requirements:
* the <img> tags must be properly formatted, with one 'src' paramater on the same line as the start of the tag and a file extension in the 'src' parameter

* Must avoid changing <img> tags which are already base64 img
	# identify src parameter
	for SRC in $SRC_LIST; do
		if [[ -f $SRC ]]; then
			$NEW_SRC_LIST="$NEW_SRC_LIST $SRC"
		else # SRC is not a file
			$NEW_SRC_LIST="$NEW_SRC_LIST -1"
		fi
	done
	# ...
	# process img files to base64
	for SRC in $SRC_LIST; do
		[[ $SRC -eq -1 ]] || # jump to next

* To avoid arguments too long in case a 'src' is base64, only fetch 100 first characters

TODO: PASS TO C BECAUSE FUCK IT TOO HARD AND TECHNICAL FOR BASH

* fgets: fetch content of file line by line (stop at newline or EOF)

ALGO
1. reaches "<img"
2. reaches "src\s*=\s*"
3a. reaches the first quote
3b. reaches the second quote (possibly on another line
3c. fetches up to 320 chars in quoted string of 'src' (SRC_STR)
4. makes sure SRC_STR is well-formated
5. makes sure it's not Base64 already
6. records path to SRC_PATH
7. call b64 encoding func with SRC_PATH argument, which gives B64_STR
8. replaces SRC_PATH with B64_STR

READING RESOURCES
	* `cd` to the dir containing the HTML file before analyzing it or: `pwd`+ dirname of HTML file + pathname to resource
	* find a way to make absolute pathes work ('--root' option to specify where the root is located)

MATCHING REGEX
	^.*<img\s*src\s*=\s*['"]\([^"']\+\)['"].*$
	.*src[[:blank:]]*=[[:blank:]]*["'][[:blank:]]*([^"']+)[[:blank:]]*["']
									   ^ weakness here: should really be same as the first match of ['"]

CORRECT SRC FOR B64 IMG
	src="\s*data:\s*image\s*/\s*(gif|jpeg|png|(x-)?bmp|x-icon)\s*[;\s*charset\s*=\s*utf-8\s*];\s*base64\s*,\s*{BASE64STRING}\s*"

ERRORS
	* Error codes: which ones to use: https://www.gnu.org/software/libc/manual/html_node/Error-Codes.html
	ENOENT) FILE does not exist
	EINVAL) FILE is not an HTML file
	SIMPLY EMIT WARNINGS WHEN
		* <img> src file was not found
		* <img> src was already b64
		* no <img> tags were changed at all (when exiting)

TODO
	More examples in EXAMPLES
	Can only takes one input FILE? Or do we allow for multiple input files? If we do, is it hard to implement?
	Works on multiple <img> tags per line?
	Works on badly formatted <img> tags?
	Use libb64 right?
	Use gnulib or libiberty??
		gnulib requires autotools and so that's a fucking nope
